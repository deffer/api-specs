swagger: '2.0'
info:
  title: API Management API
  description: Allows discovery of all University APIs and self-service provisioning of consumer credentials
  version: "1.0.0"
# the domain of the service
host: api.dev.auckland.ac.nz
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /service/apimanage
produces:
  - application/json
paths:
  /profile:
    get:
      summary: Consumer profile
      description: |
        Returns registration information of currently logged in user. If user
        if not yet registered for API consumption, returns an empty record with
        *registered* flag set to false
      tags:
        - Consumer
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Update current user's details as a registered consumer
      description: Use it to register as a consumer
      tags:
        - Consumer
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/Profile'
      responses:
        201: 
          description: created
        200: 
          description: updated
          
  /profile/oauth2:
    get:
      summary: Consumer OAuth2 credenials
      description: |
        Returns an array of Oauth2 credentials (clients) of currently logged in user.
      parameters:
        - name: clientid
          in: query
          description: To select a single credential by its id
          required: false
          type: string
      tags:
        - Credentials
      responses:
        200:
          description: An array of poauth2 credentials
          schema:
            type: array
            items:
              $ref: '#/definitions/Oauth2'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    put:
      summary: Add oauth2 ceredentials to the account of currently logged in user
      description: Add new oauth2 credentials
      parameters:
        - name: credentials
          description: Fields clinentid anf callback are required
          in: body
          required: true
          schema:
            $ref: '#/definitions/Oauth2'
      tags:
        - Credentials
      responses:
        201: 
          description: created

          
  '/profile/oauth2/{clientid}':
    get:
      summary: Consumer OAuth2 credenials
      description: |
        Returns Oauth2 credential.
      parameters:
        - name: clientid
          in: path
          description: To select a single credential by its id
          required: true
          type: string
      tags:
        - Credentials
      responses:
        200:
          description: An array of poauth2 credentials
          schema:
            $ref: '#/definitions/Oauth2'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete oauth2 ceredentials of currently logged in user
      description: Delete oauth2 credentials
      parameters:
        - name: clientid
          description: Fields clinentid anf callback are required
          in: path
          required: true
          type: string
      tags:
        - Credentials
      responses:
        200: 
          description: success
        
  /apis:
    get:
      summary: List/search
      description: Allows searching APIs by some fields.<br> Search is not implemented yet.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
        - name: q
          in: query
          description: Query terms to search over APIs
          required: false
          type: number
          format: double
      tags:
        - Api
      responses:
        200:
          description: List of APIs matching search criteria
          schema:
            $ref: '#/definitions/Apis'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  '/apis/{apiname}':
    get:
      summary: List/search
      description: Returns the most recent version of api with th given name
      parameters:
        - name: apiname
          in: path
          required: true
          type: string
          description: Offset the list of returned results by this amount. Default is zero.
      tags:
        - Api
      responses:
        200:
          description: Api
          schema:
            $ref: '#/definitions/Api'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
        
definitions:
  Api:
    type: object
    properties:
      name: 
        type: string
        description: Api display name
      id:
        type: string
        description: API identifier. Used in Oauth2
      version:
        type: string
      description:
        type: string
        description: Detailed description of API
      docs:
        type: string
        description: Location (url) of interactive documentation
      spec:
        type: string
        description: Location (url) of the API swagger spec
  Apis:
    type: object
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      count:
        type: integer
        format: int32
        description: Total number of APIs found.
      data:
        type: array
        items:
          $ref: '#/definitions/Api'      
      
  Profile:
    type: object
    properties:
      displayName:
        type: string
        description: Display name on the profile
      registered:
        type: boolean
        description: Whether current user is registered for API consumption.
      credentials:
        type: object
        properties:
          oauth2:
            type: array
            items:
              $ref: '#/definitions/Oauth2'
          apikeys:
            type: array
            items:
              $ref: '#/definitions/ApiKey'
    
  Oauth2:
    type: object
    properties:
      appname:
        type: string
        description: Client application name - will be displayed to a user of the OAuth2 application
      clientid:
        type: string
        description: Uniquely identifies a client application
      clientsecret:
        type: string
        description: Optional. A secret to be used to authenticate client credentials
      callback:
        type: string
        description: | 
          A callback URL where code/token will be released to. Must be a valid url, 
          not containing parameters or fragments. See [OAuth2 RFC section 3.1.2](https://tools.ietf.org/html/rfc6749) for details. 
  ApiKey:
    type: object
    properties:
      key:
        type: string
        description: Key value

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
